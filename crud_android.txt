ManiActivity


package com.example.cruddemo;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    DbHelper myDb;
    EditText editSname,editLname,editMarks,editTextId;
    Button btnAddData,btnViewAll,btnUpdate,btnDelete;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        myDb = new DbHelper(this,null,null,1);

        editSname = (EditText) findViewById(R.id.editText_Name);
        editLname = (EditText) findViewById(R.id.editText_Surname);
        editMarks = (EditText) findViewById(R.id.editText_Marks);
        editTextId = (EditText) findViewById(R.id.editTextId);
        btnAddData = (Button) findViewById(R.id.button_add);
        btnViewAll = (Button) findViewById(R.id.button_View);
        btnUpdate = (Button) findViewById(R.id.button_update);
        btnDelete = (Button) findViewById(R.id.button_delete);

        AddData();
        viewAll();
        UpdateData();
        DeleteData();

    }

    public void AddData(){
        btnAddData.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
               Boolean isInserted = myDb.insertData(editSname.getText().toString(),
                        editLname.getText().toString(),
                        editMarks.getText().toString());
               if(isInserted == true)
                   Toast.makeText(MainActivity.this, "Data Inserted", Toast.LENGTH_SHORT).show();
               else
                   Toast.makeText(MainActivity.this, "Not Inserted", Toast.LENGTH_SHORT).show();
            }
        });
    }

    public void viewAll(){
        btnViewAll.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Cursor res = myDb.getAllData();
                if(res.getCount() == 0){
                    //show message
                    showMessage("Error","No Record Found");
                    return;
                }
                StringBuffer buffer = new StringBuffer();
                while (res.moveToNext()){
                    buffer.append("Id : "+res.getString(0)+"\n");
                    buffer.append("Sname : "+res.getString(1)+"\n");
                    buffer.append("Lname : "+res.getString(2)+"\n");
                    buffer.append("Marks : "+res.getString(3)+"\n\n");
                }
                //show all data
                showMessage("Data",buffer.toString());
            }
        });
    }

    public void showMessage(String title,String message){
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setCancelable(true);
        builder.setTitle(title);
        builder.setMessage(message);
        builder.show();
    }

    public void UpdateData(){
        btnUpdate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Boolean isUpdated = myDb.updateData(editTextId.getText().toString(),editSname.getText().toString(),
                        editLname.getText().toString(),
                        editMarks.getText().toString());
                if(isUpdated == true)
                    Toast.makeText(MainActivity.this, "Data Updated", Toast.LENGTH_SHORT).show();
                else
                    Toast.makeText(MainActivity.this, "Not Updated", Toast.LENGTH_SHORT).show();
            }
        });
    }

    public void DeleteData(){
        btnDelete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Integer deletedRows = myDb.deleteData(editTextId.getText().toString());
                if(deletedRows > 0)
                    Toast.makeText(MainActivity.this, "Data Deleted", Toast.LENGTH_SHORT).show();
                else
                    Toast.makeText(MainActivity.this, "Data Not Deleted", Toast.LENGTH_SHORT).show();
            }
        });
    }

}


Dbhepler---------

package com.example.cruddemo;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import androidx.annotation.Nullable;

public class DbHelper extends SQLiteOpenHelper {

//    private static final String DATABASE_NAME = "Student.db";
//    private static final String TABLE_NAME = "student";
//    private static final String COL_1 = "ID";
//    private static final String COL_2 = "NAME";
//    private static final String COL_3 = "SURNAME";
//    private static final String COL_4 = "MARKS";

    public DbHelper(@Nullable Context context, @Nullable String name, @Nullable SQLiteDatabase.CursorFactory factory, int version) {
        super(context, "StudentDB", null, 1);

    }

    @Override
    public void onCreate(SQLiteDatabase sqLiteDatabase) {

        sqLiteDatabase.execSQL("create table student (Id integer primary key autoincrement , Sname text , Lname text , Marks integer)");

    }

    @Override
    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int i, int i1) {

        sqLiteDatabase.execSQL("drop table if exists student");
        onCreate(sqLiteDatabase);

    }

    public boolean insertData(String Sname,String Lname,String Marks)
    {
        SQLiteDatabase sqLiteDatabase = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put("Sname",Sname);
        contentValues.put("Lname",Lname);
        contentValues.put("Marks",Marks);
        Long result = sqLiteDatabase.insert("student",null,contentValues);
        if(result == -1)
            return false;
        else
            return true;
    }

    public Cursor getAllData(){
        SQLiteDatabase sqLiteDatabase = this.getWritableDatabase();
        Cursor res = sqLiteDatabase.rawQuery("select * from student",null);
        return res;
    }

    public boolean updateData(String Id ,String Sname,String Lname,String Marks){
        SQLiteDatabase sqLiteDatabase = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put("Id",Id);
        contentValues.put("Sname",Sname);
        contentValues.put("Lname",Lname);
        contentValues.put("Marks",Marks);
        sqLiteDatabase.update("student",contentValues,"Id = ?",new String[] { Id });
        return true;
    }

    public  Integer deleteData(String Id){
        SQLiteDatabase sqLiteDatabase = this.getWritableDatabase();
        return sqLiteDatabase.delete("student","Id = ?",new String[] { Id });
    }

}
